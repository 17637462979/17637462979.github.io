<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://17637462979.github.io</id>
    <title>Gridea</title>
    <updated>2019-10-13T02:58:07.252Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://17637462979.github.io"/>
    <link rel="self" href="https://17637462979.github.io/atom.xml"/>
    <subtitle>犹豫就会白给</subtitle>
    <logo>https://17637462979.github.io/images/avatar.png</logo>
    <icon>https://17637462979.github.io/favicon.ico</icon>
    <rights>All rights reserved 2019, Gridea</rights>
    <entry>
        <title type="html"><![CDATA[faker_data]]></title>
        <id>https://17637462979.github.io/post/faker_data</id>
        <link href="https://17637462979.github.io/post/faker_data">
        </link>
        <updated>2019-10-13T02:51:57.000Z</updated>
        <summary type="html"><![CDATA[<h3 id="造数据">造数据</h3>
<h5 id="生成假数据的第三方库-faker">生成假数据的第三方库---faker</h5>
<ul>
<li>官方文档:<a href="https://faker.readthedocs.io/en/master/" title="faker">https://faker.readthedocs.io/en/master/</a></li>
<li>如果有其他需求请参阅官方文档,我只用到了少部分功能
<ol>
<li>生成个人信息数据<br>
<code>from faker import Faker</code><br>
<code>fake = Faker(locale='zh_CN')</code><br>
<code>print(fake.simple_profile())</code></li>
</ol>
<ul>
<li>这个时候会发现生成了中文的个人信息,如果想要生成其他语言可以参见文档</li>
</ul>
<ol start="2">
<li>生成文章数据<br>
<code>&quot;title&quot;: fake.text(max_nb_chars=5)</code><br>
<code>&quot;author&quot;: fake.name()</code><br>
<code>&quot;rel_time&quot;: fake.date()</code><br>
<code>&quot;contect&quot;: fake.text(max_nb_chars=20000)</code>
<ul>
<li>文章数据一般包含标题,作者,发布时间,文章内容,(max_nb_chars限定最大长度)</li>
</ul>
</li>
</ol>
</li>
</ul>
<h3 id="存数据">存数据</h3>
<h5 id="将数据存到mongodb的第三方库-pymongo">将数据存到mongodb的第三方库---pymongo</h5>
<h5 id="mongodb安装">mongodb安装:</h5>
<pre><code>略[windows系统一路next(最后一步将安装可视化工具的勾取消),linux可以使用docker]
</code></pre>
<h5 id="使用pymongo连接mongodb">使用pymongo连接mongodb:</h5>
<pre><code>配置数据库信息
client = pymongo.MongoClient('localhost', 27017)
mydb = client['faker_data']
musictop = mydb['article']
解释:
1. localhost: 数据库所在服务器ip
2. 27017: 默认端口
3. faker_data:新建的数据库
4. article: 集合,不需要新建,插入时自动创建.如果新建了则需要插入一条数据才能看见
</code></pre>
<h5 id="将数据存入mongodb">将数据存入mongodb</h5>
<pre><code>def save_url_to_Mongo(data):
	try:
    	musictop.insert_one(data)
    	print(&quot;存储到MongoDb成功&quot;)
	except Exception as e:
    	print('存储到MongoDb失败', e)
</code></pre>
<h5 id="多线程写入">多线程写入</h5>
<pre><code>不咋几把会,待添加
</code></pre>
]]></summary>
        <content type="html"><![CDATA[<h3 id="造数据">造数据</h3>
<h5 id="生成假数据的第三方库-faker">生成假数据的第三方库---faker</h5>
<ul>
<li>官方文档:<a href="https://faker.readthedocs.io/en/master/" title="faker">https://faker.readthedocs.io/en/master/</a></li>
<li>如果有其他需求请参阅官方文档,我只用到了少部分功能
<ol>
<li>生成个人信息数据<br>
<code>from faker import Faker</code><br>
<code>fake = Faker(locale='zh_CN')</code><br>
<code>print(fake.simple_profile())</code></li>
</ol>
<ul>
<li>这个时候会发现生成了中文的个人信息,如果想要生成其他语言可以参见文档</li>
</ul>
<ol start="2">
<li>生成文章数据<br>
<code>&quot;title&quot;: fake.text(max_nb_chars=5)</code><br>
<code>&quot;author&quot;: fake.name()</code><br>
<code>&quot;rel_time&quot;: fake.date()</code><br>
<code>&quot;contect&quot;: fake.text(max_nb_chars=20000)</code>
<ul>
<li>文章数据一般包含标题,作者,发布时间,文章内容,(max_nb_chars限定最大长度)</li>
</ul>
</li>
</ol>
</li>
</ul>
<h3 id="存数据">存数据</h3>
<h5 id="将数据存到mongodb的第三方库-pymongo">将数据存到mongodb的第三方库---pymongo</h5>
<h5 id="mongodb安装">mongodb安装:</h5>
<pre><code>略[windows系统一路next(最后一步将安装可视化工具的勾取消),linux可以使用docker]
</code></pre>
<h5 id="使用pymongo连接mongodb">使用pymongo连接mongodb:</h5>
<pre><code>配置数据库信息
client = pymongo.MongoClient('localhost', 27017)
mydb = client['faker_data']
musictop = mydb['article']
解释:
1. localhost: 数据库所在服务器ip
2. 27017: 默认端口
3. faker_data:新建的数据库
4. article: 集合,不需要新建,插入时自动创建.如果新建了则需要插入一条数据才能看见
</code></pre>
<h5 id="将数据存入mongodb">将数据存入mongodb</h5>
<pre><code>def save_url_to_Mongo(data):
	try:
    	musictop.insert_one(data)
    	print(&quot;存储到MongoDb成功&quot;)
	except Exception as e:
    	print('存储到MongoDb失败', e)
</code></pre>
<h5 id="多线程写入">多线程写入</h5>
<pre><code>不咋几把会,待添加
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[yd_tips]]></title>
        <id>https://17637462979.github.io/post/yd_tips</id>
        <link href="https://17637462979.github.io/post/yd_tips">
        </link>
        <updated>2019-10-13T02:51:05.000Z</updated>
    </entry>
    <entry>
        <title type="html"><![CDATA[一些网址[持续不定期更新]]]></title>
        <id>https://17637462979.github.io/post/yi-xie-wang-zhi-chi-xu-bu-ding-qi-geng-xin</id>
        <link href="https://17637462979.github.io/post/yi-xie-wang-zhi-chi-xu-bu-ding-qi-geng-xin">
        </link>
        <updated>2019-10-13T02:39:59.000Z</updated>
    </entry>
    <entry>
        <title type="html"><![CDATA[项目总结]]></title>
        <id>https://17637462979.github.io/post/xiang-mu-zong-jie</id>
        <link href="https://17637462979.github.io/post/xiang-mu-zong-jie">
        </link>
        <updated>2019-10-13T02:37:31.000Z</updated>
    </entry>
    <entry>
        <title type="html"><![CDATA[hello word]]></title>
        <id>https://17637462979.github.io/post/hello-word</id>
        <link href="https://17637462979.github.io/post/hello-word">
        </link>
        <updated>2019-10-13T00:50:42.000Z</updated>
    </entry>
    <entry>
        <title type="html"><![CDATA[Hello Gridea]]></title>
        <id>https://17637462979.github.io/post/hello-gridea</id>
        <link href="https://17637462979.github.io/post/hello-gridea">
        </link>
        <updated>2018-12-11T16:00:00.000Z</updated>
        <summary type="html"><![CDATA[<p>👏  欢迎使用 <strong>Gridea</strong> ！<br>
✍️  <strong>Gridea</strong> 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ...</p>
]]></summary>
        <content type="html"><![CDATA[<p>👏  欢迎使用 <strong>Gridea</strong> ！<br>
✍️  <strong>Gridea</strong> 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ...</p>
]]></content>
    </entry>
</feed>